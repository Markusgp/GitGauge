{"#select":{"columns":[
   {"kind":"String"}
  ,{"kind":"String"}]
 ,"tuples":[
   ["bfst21.address.Address","bfst21.address.Builder"]
  ,["bfst21.address.Address","bfst21.address.ParsingStatus"]
  ,["bfst21.address.AddressAutoCompleter","bfst21.address.Address"]
  ,["bfst21.address.AddressAutoCompleter","bfst21.address.ParsingStatus"]
  ,["bfst21.address.AddressAutoCompleter","bfst21.collections.Tuple"]
  ,["bfst21.address.Action","bfst21.address.AddressParser"]
  ,["bfst21.address.Builder","bfst21.address.Address"]
  ,["bfst21.address.Builder","bfst21.address.ParsingStatus"]
  ,["bfst21.address.AddressNodeParserBacklog","bfst21.address.Address"]
  ,["bfst21.address.AddressNodeParserBacklog","bfst21.address.ParsingStatus"]
  ,["bfst21.address.AddressParser","bfst21.address.Address"]
  ,["bfst21.address.AddressParser","bfst21.address.Action"]
  ,["bfst21.address.AddressParser","bfst21.address.ParsingStatus"]
  ,["bfst21.address.AddressParser","bfst21.collections.Tuple"]
  ,["bfst21.address.AddressParser","bfst21.address.new LinkedHashMap<Action,Boolean>(...) { ... }"]
  ,["bfst21.address.AddressParserTest","bfst21.address.Address"]
  ,["bfst21.address.AddressParserTest","bfst21.address.ParsingStatus"]
  ,["bfst21.address.AddressPartTest","bfst21.address.ParsingStatus"]
  ,["bfst21.address.AddressTest","bfst21.address.Address"]
  ,["bfst21.address.AddressPart","bfst21.address.ParsingStatus"]
  ,["bfst21.address.AddressRegister","bfst21.address.Address"]
  ,["bfst21.address.AddressRegister","bfst21.address.ParsingStatus"]
  ,["bfst21.address.AddressVerifier","bfst21.address.Address"]
  ,["bfst21.address.AddressVerifier","bfst21.address.ParsingStatus"]
  ,["bfst21.address.AddressVerifierTest","bfst21.address.ParsingStatus"]
  ,["bfst21.address.AddressVerifierTest","bfst21.collections.Tuple"]
  ,["bfst21.address.CityTest","bfst21.address.ParsingStatus"]
  ,["bfst21.address.FloorTest","bfst21.address.ParsingStatus"]
  ,["bfst21.address.HouseTest","bfst21.address.ParsingStatus"]
  ,["bfst21.address.ParsingStatusTest","bfst21.address.ParsingStatus"]
  ,["bfst21.address.StreetTest","bfst21.address.ParsingStatus"]
  ,["bfst21.address.PostcodeTest","bfst21.address.ParsingStatus"]
  ,["bfst21.address.SideTest","bfst21.address.ParsingStatus"]
  ,["bfst21.collections.Node","bfst21.collections.Trie"]
  ,["bfst21.collections.Trie","bfst21.collections.Node"]
  ,["bfst21.beans.property.Listener","bfst21.beans.property.FilePropertyBase"]
  ,["bfst21.beans.property.FilePropertyBase","bfst21.beans.property.Listener"]
  ,["bfst21.beans.property.FilePropertyBase","bfst21.beans.property.ValueWrapper"]
  ,["bfst21.beans.property.ValueWrapper","bfst21.beans.property.FilePropertyBase"]
  ,["bfst21.collections.rtree.RTree","bfst21.collections.Tuple"]
  ,["bfst21.collections.rtree.RTree","bfst21.collections.rtree.RTreeAxis"]
  ,["bfst21.collections.rtree.RTreeTest","bfst21.collections.Tuple"]
  ,["bfst21.collections.rtree.RTreeEntryDistribution","bfst21.collections.Tuple"]
  ,["bfst21.collections.rtree.RTreeSplitMetric","bfst21.collections.rtree.RTreeAxis"]
  ,["bfst21.collections.rtree.RTreeSplitMetric","bfst21.collections.rtree.RTreeDimension"]
  ,["bfst21.collections.tuple.TupleTest","bfst21.collections.Tuple"]
  ,["bfst21.drawing.Map","bfst21.gui.Type"]
  ,["bfst21.drawing.Map","bfst21.gui.Notification"]
  ,["bfst21.drawing.Map","bfst21.pathfinding.VehicleType"]
  ,["bfst21.drawing.MapBuilder","bfst21.drawing.Map"]
  ,["bfst21.drawing.Marker","bfst21.drawing.Layer"]
  ,["bfst21.drawing.Marker","bfst21.drawing.MarkerType"]
  ,["bfst21.drawing.MarkerType","bfst21.drawing.Marker"]
  ,["bfst21.drawing.Colors","bfst21.drawing.RoadStyleConstants"]
  ,["bfst21.drawing.RoadStyleConstants","bfst21.drawing.Colors"]
  ,["bfst21.drawing.RoadStyleConstants","bfst21.drawing.Width"]
  ,["bfst21.drawing.Width","bfst21.drawing.RoadStyleConstants"]
  ,["bfst21.drawing.Style","bfst21.drawing.Layer"]
  ,["bfst21.drawing.Style","bfst21.drawing.ZoomLevel"]
  ,["bfst21.drawing.canvas.LayeredCanvas","bfst21.drawing.Layer"]
  ,["bfst21.drawing.canvas.LayeredCanvas","bfst21.drawing.ZoomLevel"]
  ,["bfst21.drawing.canvas.MapCanvas","bfst21.collections.Tuple"]
  ,["bfst21.drawing.canvas.MapCanvas","bfst21.drawing.Map"]
  ,["bfst21.drawing.canvas.MapCanvas","bfst21.drawing.Layer"]
  ,["bfst21.drawing.canvas.MapCanvas","bfst21.drawing.Marker"]
  ,["bfst21.drawing.canvas.MapCanvas","bfst21.drawing.MarkerType"]
  ,["bfst21.drawing.canvas.MapCanvas","bfst21.drawing.canvas.LayeredCanvas"]
  ,["bfst21.drawing.canvas.MapCanvas","bfst21.pathfinding.Dijkstra"]
  ,["bfst21.drawing.canvas.MapCanvas","bfst21.pathfinding.VehicleType"]
  ,["bfst21.drawing.theme.DefaultTheme","bfst21.drawing.theme.Theme"]
  ,["bfst21.drawing.theme.DefaultTheme","bfst21.osm.types.HighwayType"]
  ,["bfst21.drawing.theme.DefaultTheme","bfst21.osm.types.BuildingType"]
  ,["bfst21.drawing.theme.DefaultTheme","bfst21.osm.types.LeisureType"]
  ,["bfst21.drawing.theme.DefaultTheme","bfst21.osm.types.NaturalType"]
  ,["bfst21.drawing.theme.DefaultTheme","bfst21.osm.types.LanduseType"]
  ,["bfst21.drawing.theme.DefaultTheme","bfst21.osm.types.TunnelType"]
  ,["bfst21.drawing.theme.DefaultTheme","bfst21.osm.types.SportType"]
  ,["bfst21.drawing.theme.DefaultTheme","bfst21.osm.types.PlaceType"]
  ,["bfst21.drawing.theme.DefaultTheme","bfst21.osm.types.ManMadeType"]
  ,["bfst21.drawing.theme.DarkTheme","bfst21.drawing.theme.Theme"]
  ,["bfst21.drawing.theme.DarkTheme","bfst21.osm.types.HighwayType"]
  ,["bfst21.drawing.theme.DarkTheme","bfst21.osm.types.BuildingType"]
  ,["bfst21.drawing.theme.DarkTheme","bfst21.osm.types.LeisureType"]
  ,["bfst21.drawing.theme.DarkTheme","bfst21.osm.types.NaturalType"]
  ,["bfst21.drawing.theme.DarkTheme","bfst21.osm.types.LanduseType"]
  ,["bfst21.drawing.theme.DarkTheme","bfst21.osm.types.SportType"]
  ,["bfst21.drawing.theme.DarkTheme","bfst21.osm.types.PlaceType"]
  ,["bfst21.drawing.theme.DarkTheme","bfst21.osm.types.ManMadeType"]
  ,["bfst21.geometry.Rectangle","bfst21.collections.rtree.RTreeAxis"]
  ,["bfst21.geometry.Rectangle","bfst21.collections.rtree.RTreeDimension"]
  ,["bfst21.gui.DirectionsPanel","bfst21.pathfinding.VehicleType"]
  ,["bfst21.gui.InstructionView","bfst21.pathfinding.InstructionType"]
  ,["bfst21.gui.InstructionView","bfst21.pathfinding.Route"]
  ,["bfst21.gui.FileSavePicker","bfst21.gui.FilePicker"]
  ,["bfst21.gui.Type","bfst21.gui.Notification"]
  ,["bfst21.gui.OsmSceneController","bfst21.collections.Tuple"]
  ,["bfst21.gui.OsmSceneController","bfst21.drawing.Marker"]
  ,["bfst21.gui.OsmSceneController","bfst21.drawing.MarkerType"]
  ,["bfst21.gui.OsmSceneController","bfst21.gui.Type"]
  ,["bfst21.gui.OsmSceneController","bfst21.gui.Notification"]
  ,["bfst21.gui.OsmSceneController","bfst21.pathfinding.Dijkstra"]
  ,["bfst21.gui.Notification","bfst21.gui.Type"]
  ,["bfst21.osm.Road","bfst21.drawing.RoadStyleConstants"]
  ,["bfst21.osm.Road","bfst21.drawing.ZoomLevel"]
  ,["bfst21.osm.Road","bfst21.osm.Way"]
  ,["bfst21.osm.RoadInfo","bfst21.pathfinding.VehicleType"]
  ,["bfst21.osm.Way","bfst21.drawing.ZoomLevel"]
  ,["bfst21.osm.builder.MultiPolygonRelationBuilder","bfst21.osm.builder.DrawableBuilder"]
  ,["bfst21.osm.builder.MultiPolygonRelationBuilder","bfst21.osm.types.RelationType"]
  ,["bfst21.osm.builder.DrawableBuilder","bfst21.drawing.Layer"]
  ,["bfst21.osm.builder.DrawableBuilder","bfst21.drawing.MapBuilder"]
  ,["bfst21.osm.builder.DrawableBuilder","bfst21.osm.types.TunnelType"]
  ,["bfst21.osm.builder.WayBuilder","bfst21.osm.builder.DrawableBuilder"]
  ,["bfst21.osm.parser.NodeParser","bfst21.address.Address"]
  ,["bfst21.osm.parser.NodeParser","bfst21.address.ParsingStatus"]
  ,["bfst21.osm.parser.NodeParser","bfst21.collections.Tuple"]
  ,["bfst21.osm.parser.NodeParser","bfst21.drawing.MapBuilder"]
  ,["bfst21.osm.parser.RelationParser","bfst21.drawing.MapBuilder"]
  ,["bfst21.osm.parser.WayParser","bfst21.drawing.MapBuilder"]
  ,["bfst21.osm.parser.OsmParser","bfst21.drawing.MapBuilder"]
  ,["bfst21.osm.parser.OsmParser","bfst21.gui.Type"]
  ,["bfst21.osm.parser.OsmParser","bfst21.gui.Notification"]
  ,["bfst21.osm.parser.StyleTagParser","bfst21.drawing.Layer"]
  ,["bfst21.osm.parser.StyleTagParser","bfst21.drawing.RoadStyleConstants"]
  ,["bfst21.osm.parser.StyleTagParser","bfst21.drawing.Width"]
  ,["bfst21.osm.parser.StyleTagParser","bfst21.drawing.ZoomLevel"]
  ,["bfst21.osm.parser.StyleTagParser","bfst21.osm.types.HighwayType"]
  ,["bfst21.osm.parser.StyleTagParser","bfst21.osm.types.NaturalType"]
  ,["bfst21.osm.parser.StyleTagParser","bfst21.osm.types.LanduseType"]
  ,["bfst21.osm.parser.StyleTagParser","bfst21.osm.types.SportType"]
  ,["bfst21.osm.parser.StyleTagParser","bfst21.osm.types.PlaceType"]
  ,["bfst21.pathfinding.Edge","bfst21.drawing.ZoomLevel"]
  ,["bfst21.pathfinding.Edge","bfst21.pathfinding.VehicleType"]
  ,["bfst21.pathfinding.Graph","bfst21.drawing.ZoomLevel"]
  ,["bfst21.pathfinding.Graph","bfst21.pathfinding.RestoreCompressedGraph"]
  ,["bfst21.pathfinding.Graph","bfst21.pathfinding.VehicleType"]
  ,["bfst21.pathfinding.GraphCompressor","bfst21.pathfinding.Graph"]
  ,["bfst21.pathfinding.RestoreCompressedGraph","bfst21.pathfinding.Graph"]
  ,["bfst21.pathfinding.GraphCompressorTest","bfst21.pathfinding.Graph"]
  ,["bfst21.pathfinding.Instruction","bfst21.pathfinding.InstructionType"]
  ,["bfst21.pathfinding.Instruction","bfst21.pathfinding.Route"]
  ,["bfst21.pathfinding.InstructionType","bfst21.pathfinding.Route"]
  ,["bfst21.pathfinding.Route","bfst21.drawing.Layer"]
  ,["bfst21.pathfinding.Route","bfst21.pathfinding.Instruction"]
  ,["bfst21.pathfinding.Route","bfst21.pathfinding.InstructionType"]
  ,["bfst21.pathfinding.RoutePlanner","bfst21.drawing.Map"]
  ,["bfst21.pathfinding.RoutePlanner","bfst21.pathfinding.Graph"]
  ,["bfst21.pathfinding.RoutePlanner","bfst21.pathfinding.InstructionType"]
  ,["bfst21.pathfinding.RoutePlanner","bfst21.pathfinding.Route"]
  ,["bfst21.services.parsers.osm.MultiPolygonMultipPolygonRelationBuilderTest","bfst21.osm.types.RelationType"]
  ,["bfst21.address.new LinkedHashMap<Action,Boolean>(...) { ... }","bfst21.address.Action"]
  ,["bfst21.address.new LinkedHashMap<Action,Boolean>(...) { ... }","bfst21.address.AddressParser"]
  ,["java.lang.new Runnable(...) { ... }","bfst21.gui.OsmSceneController"]
  ,["java.lang.new Runnable(...) { ... }","bfst21.gui.Notifications"]
  ,["java.lang.new Runnable(...) { ... }","bfst21.pathfinding.Dijkstra"]
  ,["java.util.function.new Consumer<Address>(...) { ... }","bfst21.address.ParsingStatus"]
  ,["java.util.function.new IntConsumer(...) { ... }","bfst21.collections.Trie"]
  ,["java.util.function.new Consumer<String>(...) { ... }","bfst21.collections.trie.TrieTest"]
  ,["java.util.function.new Consumer<Node>(...) { ... }","bfst21.osm.parser.RelationParser"]
  ,["bfst21.drawing.new ShortestPathFoundEvent(...) { ... }","bfst21.gui.OsmSceneController"]
  ,["bfst21.drawing.canvas.events.new PointCreatedEvent<Point>(...) { ... }","bfst21.drawing.Marker"]
  ,["bfst21.drawing.canvas.events.new PointCreatedEvent<Point>(...) { ... }","bfst21.drawing.MarkerType"]
  ,["bfst21.drawing.canvas.events.new PointCreatedEvent<Point>(...) { ... }","bfst21.drawing.canvas.MapCanvas"]
  ,["bfst21.drawing.canvas.events.new ClearEvent(...) { ... }","bfst21.drawing.canvas.MapCanvas"]
  ,["bfst21.drawing.canvas.events.new NearestEntityFound<Road>(...) { ... }","bfst21.gui.OsmSceneController"]
  ,["bfst21.drawing.canvas.events.new PointCreatedEvent<Marker>(...) { ... }","bfst21.gui.OsmSceneController"]
  ,["bfst21.drawing.theme.new EnumMap<BuildingType,Triple<OSMColor,OSMColor,String>>(...) { ... }","bfst21.osm.types.BuildingType"]
  ,["bfst21.drawing.theme.new EnumMap<PlaceType,Triple<OSMColor,OSMColor,String>>(...) { ... }","bfst21.osm.types.PlaceType"]
  ,["bfst21.drawing.theme.new EnumMap<SportType,Triple<OSMColor,OSMColor,String>>(...) { ... }","bfst21.osm.types.SportType"]
  ,["bfst21.drawing.theme.new EnumMap<TunnelType,Triple<OSMColor,OSMColor,String>>(...) { ... }","bfst21.osm.types.TunnelType"]
  ,["bfst21.drawing.theme.new EnumMap<HighwayType,Triple<OSMColor,OSMColor,String>>(...) { ... }","bfst21.osm.types.HighwayType"]
  ,["bfst21.drawing.theme.new EnumMap<ManMadeType,Triple<OSMColor,OSMColor,String>>(...) { ... }","bfst21.osm.types.ManMadeType"]
  ,["bfst21.drawing.theme.new EnumMap<NaturalType,Triple<OSMColor,OSMColor,String>>(...) { ... }","bfst21.osm.types.NaturalType"]
  ,["bfst21.drawing.theme.new EnumMap<LanduseType,Triple<OSMColor,OSMColor,String>>(...) { ... }","bfst21.osm.types.LanduseType"]
  ,["bfst21.drawing.theme.new EnumMap<LeisureType,Triple<OSMColor,OSMColor,String>>(...) { ... }","bfst21.osm.types.LeisureType"]
  ,["bfst21.gui.new VehicleTypeChangedEvent(...) { ... }","bfst21.gui.OsmSceneController"]
  ,["javafx.event.new EventHandler<JFXAutoCompleteEvent<String>>(...) { ... }","bfst21.address.AddressAutoCompleter"]
  ,["javafx.event.new EventHandler<MouseEvent>(...) { ... }","bfst21.drawing.canvas.LayeredCanvas"]
  ,["javafx.event.new EventHandler<MouseEvent>(...) { ... }","bfst21.drawing.canvas.MapCanvas"]
  ,["javafx.event.new EventHandler<ActionEvent>(...) { ... }","bfst21.gui.FilePicker"]
  ,["javafx.beans.new InvalidationListener(...) { ... }","bfst21.address.AddressAutoCompleter"]
  ,["org.junit.jupiter.api.function.new Executable(...) { ... }","bfst21.collections.IdMapTest"]
  ,["org.junit.jupiter.api.function.new Executable(...) { ... }","bfst21.collections.ComparableIntMapTest"]
  ,["org.junit.jupiter.api.function.new Executable(...) { ... }","bfst21.collections.trie.TrieTest"]
  ,["org.junit.jupiter.api.function.new Executable(...) { ... }","bfst21.services.parsers.osm.MultiPolygonMultipPolygonRelationBuilderTest"]]
 }}
